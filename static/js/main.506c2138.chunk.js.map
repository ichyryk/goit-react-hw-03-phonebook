{"version":3,"sources":["components/Button/Button.styled.jsx","components/Button/Button.jsx","components/Form/Form.styled.jsx","components/Form/Form.jsx","components/Wrapper/Wrapper.styled.jsx","components/Wrapper/Wrapper.jsx","components/ContactList/ContactList.styled.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","components/App.jsx","index.js"],"names":["CustomButton","styled","button","Button","text","CustomForm","form","Form","state","name","number","handleChange","e","target","value","setState","console","log","handleSubmit","preventDefault","props","onSubmit","this","type","placeholder","id","onChange","pattern","title","required","Component","Container","div","Wrapper","children","List","ContactList","contacts","onDeleteContact","map","onClick","Filter","App","contactsList","filter","formHandleSubmit","entry","uuidv4","find","contact","toLowerCase","isAlreadySaved","prevState","alert","changeFilter","currentTarget","deleteContact","contactId","getVisibleContacts","normalizedFilter","includes","localStorage","getItem","parsedContacts","JSON","parse","prevProps","nextContacts","setItem","stringify","visibleContacts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yjBAEaA,EAAeC,IAAOC,OAAV,sN,OCIVC,I,IAAAA,EAJf,YAA2B,IAATC,EAAQ,EAARA,KAChB,OAAO,cAACJ,EAAD,UAAeI,KCDXC,EAAaJ,IAAOK,KAAV,oHCEFC,E,4MACnBC,MAAQ,CACNC,KAAM,GACNC,OAAQ,I,EAGVC,aAAe,SAAAC,GACb,MAAwBA,EAAEC,OAAlBJ,EAAR,EAAQA,KAAMK,EAAd,EAAcA,MACd,EAAKC,SAAL,eAAiBN,EAAOK,IACxBE,QAAQC,IAAI,U,EAGdC,aAAe,SAAAN,GACbA,EAAEO,iBAEF,EAAKC,MAAMC,SAAS,EAAKb,OAEzB,EAAKO,SAAS,CAAEN,KAAM,GAAIC,OAAQ,M,4CAGpC,WACE,OACE,eAACL,EAAD,CAAYgB,SAAUC,KAAKJ,aAA3B,UACE,sCACA,uBACEK,KAAK,OACLd,KAAK,OACLe,YAAY,OACZV,MAAOQ,KAAKd,MAAMC,KAClBgB,GAAIH,KAAKd,MAAMiB,GACfC,SAAUJ,KAAKX,aACfgB,QAAQ,yHACRC,MAAM,kcACNC,UAAQ,IAEV,uBACEN,KAAK,MACLd,KAAK,SACLe,YAAY,SACZV,MAAOQ,KAAKd,MAAME,OAClBe,GAAIH,KAAKd,MAAMiB,GACfC,SAAUJ,KAAKX,aACfgB,QAAQ,yFACRC,MAAM,giBACNC,UAAQ,IAEV,cAAC,EAAD,CAAQN,KAAK,SAASnB,KAAK,uB,GA9CD0B,aCFrBC,EAAY9B,IAAO+B,IAAV,4ECIPC,MAJf,YAAgC,IAAbC,EAAY,EAAZA,SACjB,OAAO,cAACH,EAAD,UAAYG,K,QCDd,IAAMC,EAAI,uMC6BFC,EA5BK,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,SAAUC,EAAsB,EAAtBA,gBAC/B,OACE,cAACH,EAAD,UACGE,EAASE,KAAI,YAA2B,IAAxBd,EAAuB,EAAvBA,GAAIhB,EAAmB,EAAnBA,KAAMC,EAAa,EAAbA,OACzB,OACE,+BACE,8BAAID,EAAJ,OACA,4BAAIC,IACJ,wBAAQ8B,QAAS,kBAAMF,EAAgBb,IAAvC,sBAHOA,SCNNgB,EAAS,SAAC,GAAkB,IAAhBf,EAAe,EAAfA,SACvB,OACE,qCACE,uDACA,uBACEH,KAAK,OACLd,KAAK,OACLe,YAAY,iBACZE,SAAUA,EACVG,UAAQ,Q,QCHKa,E,4MACnBlC,MAAQ,CACN6B,SAAUM,EACVC,OAAQ,I,EAqBVC,iBAAmB,YAA2B,IAAxBpC,EAAuB,EAAvBA,KAAUC,GAAa,EAAjBe,GAAiB,EAAbf,QACxBoC,EAAQ,CACZrB,GAAIsB,cACJtC,OACAC,WAGqB,SAAAD,GACrB,OAAO,EAAKD,MAAM6B,SAASW,MACzB,SAAAC,GAAO,OAAIA,EAAQxC,KAAKyC,gBAAkBzC,EAAKyC,iBAI/CC,CAAe1C,GAKnB,EAAKM,UAAS,SAAAqC,GAAS,kCAClBA,GADkB,IAErBf,SAAS,GAAD,mBAAMe,EAAUf,UAAhB,CAA0BS,SANlCO,MAAM,GAAD,OAAI5C,EAAJ,qB,EAUT6C,aAAe,SAAA1C,GACb,EAAKG,SAAS,CAAE6B,OAAQhC,EAAE2C,cAAczC,S,EAG1C0C,cAAgB,SAAAC,GACd,EAAK1C,UAAS,SAAAqC,GAAS,MAAK,CAC1Bf,SAAUe,EAAUf,SAASO,QAAO,SAAAK,GAAO,OAAIA,EAAQxB,KAAOgC,U,EAIlEC,mBAAqB,WACnB,MAA6B,EAAKlD,MAA1B6B,EAAR,EAAQA,SACFsB,EADN,EAAkBf,OACcM,cAEhC,OAAOb,EAASO,QAAO,SAAAK,GAAO,OAC5BA,EAAQxC,KAAKyC,cAAcU,SAASD,O,uDAzDxC,WACE,IAAMtB,EAAWwB,aAAaC,QAAQ,YAChCC,EAAiBC,KAAKC,MAAM5B,GAE9B0B,GACFzC,KAAKP,SAAS,CAAEsB,SAAU0B,M,gCAI9B,SAAmBG,EAAWd,GAC5B,IAAMe,EAAe7C,KAAKd,MAAM6B,SAG5B8B,IAFiBf,EAAUf,UAG7BwB,aAAaO,QAAQ,WAAYJ,KAAKK,UAAUF,M,oBA+CpD,WACE,IAAQvB,EAAWtB,KAAKd,MAAhBoC,OACF0B,EAAkBhD,KAAKoC,qBAG7B,OACE,eAAC,EAAD,WACE,2CACA,cAAC,EAAD,CAAMrC,SAAUC,KAAKuB,mBAErB,0CACA,cAAC,EAAD,CAAQ/B,MAAO8B,EAAQlB,SAAUJ,KAAKgC,eACtC,cAAC,EAAD,CACEjB,SAAUiC,EACVhC,gBAAiBhB,KAAKkC,uB,GAjFC1B,aCHjCyC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.506c2138.chunk.js","sourcesContent":["import styled from '@emotion/styled';\n\nexport const CustomButton = styled.button`\n  background-color: #010101;\n  border: none;\n  outline: none;\n  padding: 2px 8px;\n  color: #fff;\n  font-weight: bold;\n  font-size: 14px;\n  line-height: 24px;\n  cursor: pointer;\n`;\n","import { CustomButton } from './Button.styled';\n\nfunction Button({ text }) {\n  return <CustomButton>{text}</CustomButton>;\n}\n\nexport default Button;\n","import styled from '@emotion/styled';\n\nexport const CustomForm = styled.form`\n  padding: 20px 30px;\n  & input {\n    display: block;\n    margin-bottom: 10px;\n  }\n`;\n","import { Component } from 'react';\nimport Button from '../Button/Button';\nimport { CustomForm } from './Form.styled';\n\nexport default class Form extends Component {\n  state = {\n    name: '',\n    number: '',\n  };\n\n  handleChange = e => {\n    const { name, value } = e.target;\n    this.setState({ [name]: value });\n    console.log('Hello');\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n\n    this.props.onSubmit(this.state);\n\n    this.setState({ name: '', number: '' });\n  };\n\n  render() {\n    return (\n      <CustomForm onSubmit={this.handleSubmit}>\n        <h3>Name</h3>\n        <input\n          type=\"text\"\n          name=\"name\"\n          placeholder=\"Name\"\n          value={this.state.name}\n          id={this.state.id}\n          onChange={this.handleChange}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n        />\n        <input\n          type=\"tel\"\n          name=\"number\"\n          placeholder=\"Number\"\n          value={this.state.number}\n          id={this.state.id}\n          onChange={this.handleChange}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n        />\n        <Button type=\"submit\" text=\"Add contact\" />\n      </CustomForm>\n    );\n  }\n}\n","import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n  background-color: #e9f043;\n  padding: 10px;\n`;\n","import { Container } from './Wrapper.styled';\n\nfunction Wrapper({ children }) {\n  return <Container>{children}</Container>;\n}\n\nexport default Wrapper;\n","import styled from '@emotion/styled/macro';\n\nexport const List = styled.ul`\n  list-style: square;\n  & li {\n    display: flex;\n    &:not(:last-child) {\n      margin-bottom: 10px;\n    }\n    & p:not(:last-child) {\n      margin-right: 10px;\n      margin-bottom: 0;\n    }\n  }\n`;\n","import { List } from './ContactList.styled';\nimport PropTypes from 'prop-types';\n\nconst ContactList = ({ contacts, onDeleteContact }) => {\n  return (\n    <List>\n      {contacts.map(({ id, name, number }) => {\n        return (\n          <li key={id}>\n            <p>{name}:</p>\n            <p>{number}</p>\n            <button onClick={() => onDeleteContact(id)}>Delete</button>\n          </li>\n        );\n      })}\n    </List>\n  );\n};\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    }),\n  ).isRequired,\n\n  onDeleteContact: PropTypes.func.isRequired,\n};\n\nexport default ContactList;\n","import PropTypes from 'prop-types';\n\nexport const Filter = ({ onChange }) => {\n  return (\n    <>\n      <h4>Find contacts by name</h4>\n      <input\n        type=\"text\"\n        name=\"name\"\n        placeholder=\"Filter by name\"\n        onChange={onChange}\n        required\n      />\n    </>\n  );\n};\n\nFilter.propTypes = {\n  onChange: PropTypes.func.isRequired,\n};\n","import { Component } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport Form from './Form/Form';\nimport Wrapper from './Wrapper/Wrapper';\nimport ContactList from './ContactList/ContactList.jsx';\nimport { Filter } from './Filter/Filter';\nimport contactsList from './data/data.json';\n\nexport default class App extends Component {\n  state = {\n    contacts: contactsList,\n    filter: '',\n  };\n\n  componentDidMount() {\n    const contacts = localStorage.getItem('contacts');\n    const parsedContacts = JSON.parse(contacts);\n\n    if (parsedContacts) {\n      this.setState({ contacts: parsedContacts });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const nextContacts = this.state.contacts;\n    const prevContacts = prevState.contacts;\n\n    if (nextContacts !== prevContacts) {\n      localStorage.setItem('contacts', JSON.stringify(nextContacts));\n    }\n  }\n\n  formHandleSubmit = ({ name, id, number }) => {\n    const entry = {\n      id: uuidv4(),\n      name,\n      number,\n    };\n\n    const isAlreadySaved = name => {\n      return this.state.contacts.find(\n        contact => contact.name.toLowerCase() === name.toLowerCase(),\n      );\n    };\n\n    if (isAlreadySaved(name)) {\n      alert(`${name} already exist!`);\n      return;\n    }\n\n    this.setState(prevState => ({\n      ...prevState,\n      contacts: [...prevState.contacts, entry],\n    }));\n  };\n\n  changeFilter = e => {\n    this.setState({ filter: e.currentTarget.value });\n  };\n\n  deleteContact = contactId => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contact.id !== contactId),\n    }));\n  };\n\n  getVisibleContacts = () => {\n    const { contacts, filter } = this.state;\n    const normalizedFilter = filter.toLowerCase();\n\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter),\n    );\n  };\n\n  render() {\n    const { filter } = this.state;\n    const visibleContacts = this.getVisibleContacts();\n\n    // const filteredContacts = this.filterContactsByName(this.state.contacts);\n    return (\n      <Wrapper>\n        <h2>Phonebook</h2>\n        <Form onSubmit={this.formHandleSubmit} />\n\n        <h2>Contacts</h2>\n        <Filter value={filter} onChange={this.changeFilter} />\n        <ContactList\n          contacts={visibleContacts}\n          onDeleteContact={this.deleteContact}\n        />\n      </Wrapper>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}